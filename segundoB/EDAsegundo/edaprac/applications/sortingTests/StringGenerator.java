package applications.sortingTests;

/**
 * StringGenerator(n) generates Strings with a common
 * prefix of length n.
 * Usage: if you want to create two strings s1 and s2 that
 * share a 10-character prefix, use the following code.
 *  StringGenerator g = new StringGenerator(10);
 *  String s1 = g.generate();
 *  String s2 = g.generate();
 *
 * @author (EDA) 
 * @version (Curso 2017-2018)
 */

public class StringGenerator {
    
    private int numEqual;   // Number of shared initial characters of the strings
    private String base; // Common initial substring for the generated strings
    
    /**
     * Creates a new StringGenerator whose first n characters are equal.
     */
    public StringGenerator(int n) {
        this.numEqual = n;
        String s = "";
        int randomDigit = (int) (Math.random() * 10);
        for (int i = 0; i < numEqual; i++) {
            s += (char) ((i + randomDigit) % 256 + (int) '0');
        }
        this.base = s;
    }

    /**
     * Returns a String whose n first characters are
     * equal to all other strings generated by this object,
     * the rest are chosen at random.
     */
    public String generate() {
        String s = "";
        for (int i = 1; i <= (int) (Math.random() * 2 * numEqual); i++) {
            s += (char) ((int) (Math.random() * 128) + (int) '0');
        }
        return this.base + s;
    }
}